env:
  GO_VERSION: '1.21'

name: Meshery NSM
on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
jobs:
  lint:
    name: Check & Review code
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.52
        args: --timeout=5m
  error_check:
    name: Error check
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@master
      with:
        fetch-depth: 1
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    - run: go install github.com/kisielk/errcheck@latest; errcheck -tags draft ./...
  static_check:
    name: Static check
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@master
      with:
        fetch-depth: 1
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    - run: go install honnef.co/go/tools/cmd/staticcheck@latest; PKGS=$(go list ./... | grep -vF /meshes); staticcheck -tags draft -checks all $PKGS # https://staticcheck.io/docs/checks
#   vet:
#     name: Vet
#     runs-on: ubuntu-latest
#     steps:
#     - name: Check out code
#       uses: actions/checkout@master
#       with:
#         fetch-depth: 1
#     - name: Setup Go
#       uses: actions/setup-go@v1
#       with:
#         go-version: ${{ env.GO_VERSION }}
#     - run: GOPROXY=direct GOSUMDB=off GO111MODULE=on go vet -tags draft ./...
#   sec_check:
#     name: Security check
#     runs-on: ubuntu-latest
#     steps:
#     - name: Check out code
#       uses: actions/checkout@master
#       with:
#         fetch-depth: 1
#     - name: Setup Go
#       uses: actions/setup-go@v1
#       with:
#         go-version: ${{ env.GO_VERSION }}
#     - run: GOPROXY=direct GOSUMDB=off GO111MODULE=on go get github.com/securego/gosec/cmd/gosec; /home/runner/go/bin/gosec ./... # https://github.com/securego/gosec
#   tests:
#     # needs: [lint, error_check, static_check, vet, sec_check]
#     name: Tests
#     runs-on: ubuntu-latest
#     steps:
#     - name: Check out code
#       uses: actions/checkout@master
#       with:
#         fetch-depth: 1
#     - name: Setup Go
#       uses: actions/setup-go@v1
#       with:
#         go-version: ${{ env.GO_VERSION }}
#     - run: GOPROXY=direct GOSUMDB=off GO111MODULE=on go test -tags draft ./...
  build:
    name: Build check
    runs-on: ubuntu-latest
    # needs: [lint, error_check, static_check, vet, sec_check, tests]
    steps:
    - name: Check out code
      uses: actions/checkout@master
      with:
        fetch-depth: 1
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    - run: go build .
